syntax = "proto3";
package ET;

message OpVector3
{
	float X = 1;
	float Y = 2;
	float Z = 3;
}
message IntLongKV
{
	int32 Key = 1;
	int64 Value = 2;
}

//ResponseType M2C_TestResponse
message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string request = 1;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string response = 1;
}

//ResponseType Actor_TransferResponse
message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // IRequest
{
	int32 RpcId = 90;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	// 自己的unit id
	int64 UnitId = 1;
}

message UnitInfo
{
	int64 UnitId  = 1;
    int32 ConfigId = 2;
	OpVector3 Pos = 3;
	OpVector3 Dir = 4;
	repeated IntLongKV KVs = 6;
}

message C2M_PathfindingResult // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	
	OpVector3 Target = 1;
	int32 ClientFrame = 2; // 预测回滚用
}

message UpdateTransformProto
{
	int64 UnitId = 1;
	OpVector3 Pos = 2;
	OpVector3 Dir = 3;
}

message UpdateInputResultProto
{
	MoveInputProto Move = 1; 
}

message MoveInputProto
{
	OpVector3 Target = 1;
	bool Vaild = 2;
	int32 ClientFrame = 3; // 是客户端哪帧的输入
}

message UpdateNumericProto
{
	int64 UnitId = 1;
	repeated IntLongKV Numerics = 2;
}

message M2C_UpdateFrame // IActorMessage
{
	int64 ActorId = 93;
	int32 Frame = 1;
	int64 MyUnitId = 2;
	repeated UpdateTransformProto Transforms = 3; // 周围人更新位置的信息
	UpdateInputResultProto InputResult = 4; // 自己的输入结果信息
	repeated UpdateNumericProto Numerics = 5; // 周围人的数值更新信息
	repeated UnitInfo Units = 6; // 周围Unit创建消息
	repeated int64 RemoveUnits = 7; // 周围Unit移除的消息
}



//ResponseType G2C_Ping
message C2G_Ping // IRequest
{
	int32 RpcId = 90;
}

message G2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	
	int64 Time = 1;
}


message G2C_Test // IMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // IRequest
{
	int32 RpcId = 90;
	string Account = 1;
	string Password = 2;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2C_Login
message C2R_Login // IRequest
{
	int32 RpcId = 90;
	string	Account	 = 1;	// 帐号
	string	Password = 2;	// 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Address = 1;
	int64 Key	    = 2;
	int64 GateId = 3;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;	// 帐号
	int64 GateId = 2;
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PlayerId = 1;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

//ResponseType M2C_TestActorResponse
message C2M_TestActorRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 91;
	string Info = 1;
}

message M2C_TestActorResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Info = 1;
}

message PlayerInfo // IMessage
{
	int32 RpcId = 90;
}

//ResponseType G2C_PlayerInfo
message C2G_PlayerInfo // IRequest
{
	int32 RpcId = 90;
}

message G2C_PlayerInfo // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	PlayerInfo PlayerInfo = 1;
	repeated PlayerInfo PlayerInfos = 2;
    repeated string TestRepeatedString = 3;
    repeated int32 TestRepeatedInt32 = 4;
    repeated int64 TestRepeatedInt64 = 5;
}